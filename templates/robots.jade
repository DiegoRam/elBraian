extends layout

block  head
  title Robots
  link(rel='stylesheet', href='static/bloques-101/src/bloques/css/educablocks.css')

block menu-extra
  li.dropdown
    a.dropdown-toggle(href='#', data-toggle='dropdown')
      i.material-icons save
      p.hidden-lg.hidden-md Archivo
    ul.dropdown-menu
      li
        a(href='#', onclick='toogleCode()') Ver/Ocultar el codigo
      li
        a(href='#', onclick='uploadClick()') Cargar en Genuino 101
      li
        a(href='#', onclick='saveCode()') Guardar codigo Arduino
      li
        a(href='#', onclick='save()') Guardar Bloques
      li
        a(href='#', onclick='fakeload') Cargar Bloques
      input#load(type='file', style='display: none;')

block bloques
  xml#startBlocks(style='display: none')
    block(type='controls_setupLoop', deletable='false')
  #wrap
    #blockly(style='height: 500px; width: 100%;')

block scripts  
  script(src='static/bloques-101/js/Blob.js')
  script(src='static/bloques-101/js/spin.js')
  script(src='static/bloques-101/js/FileSaver.min.js')
  script(src='static/bloques-101/js/blockly_helper.js')
  script(src='static/bloques-101/src/bloques/js/underscore/underscore.js')
  script(src='static/bloques-101/src/bloques/js/blockly-bq/blockly_compressed.js')
  script(src='static/bloques-101/src/bloques/js/blockly-bq/blocks_compressed.js')
  script(src='static/bloques-101/src/bloques/js/blockly-bq/arduino_compressed.js')
  script(src='static/bloques-101/src/bloques/js/educablocks2.js')
  script.
    if (window.RoboblocksLanguage === undefined ||
    window.RoboblocksLanguage == null) {
    var RoboblocksLanguage = 'es-ES';
    }
    Roboblocks2.load({
    zoom: 0.5
    });
    // New workspace for each test case
    var el = document.getElementById('blockly');
    Blockly.inject(el, {
    toolbox: Blockly.createToolbox()
    });
    // Create a default setup/loop block
    Blockly.Xml.domToWorkspace(Blockly.getMainWorkspace(),
    document.getElementById('startBlocks'));
    $('.blocklySvg, #blockly').height('100%');
    $('.blocklySvg').width('100%');
    var colors = [
    "",
    Roboblocks2.LANG_COLOUR_PROCEDURES,
    Roboblocks2.LANG_COLOUR_CONTROL,
    Roboblocks2.LANG_COLOUR_LOGIC,
    Roboblocks2.LANG_COLOUR_MATH,
    Roboblocks2.LANG_COLOUR_VARIABLES,
    Roboblocks2.LANG_COLOUR_TEXT,
    Roboblocks2.LANG_COLOUR_COMMUNICATION,
    Roboblocks2.LANG_COLOUR_ZUM,
    Roboblocks2.LANG_COLOUR_BQ,
    Roboblocks2.LANG_COLOUR_ADVANCED,
    Roboblocks2.LANG_COLOUR_LCD,
    Roboblocks2.LANG_COLOUR_SERVO,
    ];
    $('.blocklyTreeRow').each(function(i, e) {
    $(e).prepend('<span class="treeLabelBlock" style="background-color:' + colors[i] + '"></span>');
    });
    // Update code
    Blockly.addChangeListener(function() {
    $('#code').html('<code class="c++"><pre>' +
    escapeCode(Blockly.Arduino.workspaceToCode()) +
    '</pre></code>');
    // Highlight
    $("pre").each(function(i, e) {
    hljs.highlightBlock(e);
    });
    });
    // Show/hide code
    function toogleCode() {
    if ($('#code').css('display') == 'none') {
    // Show
    $('#code').show();
    $('#blockly').width('66%');
    } else {
    // Hide
    $('#code').hide();
    $('#blockly').width('100%');
    }
    // Resize workspace
    Blockly.fireUiEvent(window, "resize");
    }
    function escapeCode(code) {
    var str = code;
    str = str.replace(/</g, "&lt;");
    str = str.replace(/>/g, "&gt;");
    return str;
    }
    function resetWorkspace() {
    Blockly.mainWorkspace.clear();
    Blockly.Xml.domToWorkspace(Blockly.getMainWorkspace(),
    document.getElementById('startBlocks'));
    }

